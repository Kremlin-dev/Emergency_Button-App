{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/molecule/Breadcrumb.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/molecule/Breadcrumb.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/molecule/Breadcrumb.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/molecule/Breadcrumb.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/molecule/Breadcrumb.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/molecule/Breadcrumb.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/organism/EmergencyTable.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/organism/EmergencyTable.tsx <module evaluation>\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wEACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/organism/EmergencyTable.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/organism/EmergencyTable.tsx\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oDACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/organism/EmergencyCulomns.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/organism/EmergencyCulomns.tsx <module evaluation>\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,0EACA"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/organism/EmergencyCulomns.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/organism/EmergencyCulomns.tsx\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,sDACA"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/data/index.ts"],"sourcesContent":["import { EmergenciesProps } from \"@/types\"\r\n\r\nexport const emergenciesList: EmergenciesProps[] = [\r\n  {\r\n    emergencyId: 101,\r\n    employeeId: \"2001\",\r\n    category: \"Fire Outbreak\",\r\n    status: \"Resolved\",\r\n    dateCreated: \"2024-02-01\",\r\n  },\r\n  {\r\n    emergencyId: 102,\r\n    employeeId: \"2002\",\r\n    category: \"Medical Emergency\",\r\n    status: \"Pending\",\r\n    dateCreated: \"2024-02-03\",\r\n  },\r\n  {\r\n    emergencyId: 103,\r\n    employeeId: \"2003\",\r\n    category: \"Security Breach\",\r\n    status: \"Ongoing\",\r\n    dateCreated: \"2024-02-05\",\r\n  },\r\n  {\r\n    emergencyId: 104,\r\n    employeeId: \"2004\",\r\n    category: \"Power Outage\",\r\n    status: \"Resolved\",\r\n    dateCreated: \"2024-02-07\",\r\n  },\r\n  {\r\n    emergencyId: 105,\r\n    employeeId: \"2005\",\r\n    category: \"Cyber Attack\",\r\n    status: \"Resolved\",\r\n    dateCreated: \"2024-02-09\",\r\n  },\r\n  {\r\n    emergencyId: 106,\r\n    employeeId: \"2006\",\r\n    category: \"Workplace Accident\",\r\n    status: \"Pending\",\r\n    dateCreated: \"2024-02-11\",\r\n  },\r\n  {\r\n    emergencyId: 107,\r\n    employeeId: \"2007\",\r\n    category: \"Chemical Spill\",\r\n    status: \"Resolved\",\r\n    dateCreated: \"2024-02-13\",\r\n  },\r\n  {\r\n    emergencyId: 108,\r\n    employeeId: \"2008\",\r\n    category: \"Gas Leak\",\r\n    status: \"Ongoing\",\r\n    dateCreated: \"2024-02-15\",\r\n  },\r\n  {\r\n    emergencyId: 109,\r\n    employeeId: \"2009\",\r\n    category: \"Building Collapse\",\r\n    status: \"Pending\",\r\n    dateCreated: \"2024-02-17\",\r\n  },\r\n  {\r\n    emergencyId: 110,\r\n    employeeId: \"2010\",\r\n    category: \"Flooding\",\r\n    status: \"Resolved\",\r\n    dateCreated: \"2024-02-19\",\r\n  },\r\n];\r\n\r\n\r\nexport const employeeList = [\r\n  {\r\n    employeeId: \"2001\",\r\n    name: \"John Doe\",\r\n    department: \"IT\",\r\n    email: \"johnDoe@gmail.com\",\r\n  },\r\n  {\r\n    employeeId: \"2001\",\r\n    name: \"James Doe\",\r\n    department: \"IT\",\r\n    email: \"johnDoe@gmail.com\",\r\n  },\r\n  {\r\n    employeeId: \"2001\",\r\n    name: \"John Doe\",\r\n    department: \"IT\",\r\n    email: \"johnDoe@gmail.com\",\r\n  },\r\n  {\r\n    employeeId: \"2001\",\r\n    name: \"John Doe\",\r\n    department: \"IT\",\r\n    email: \"johnDoe@gmail.com\",\r\n  },\r\n  {\r\n    employeeId: \"2001\",\r\n    name: \"John Doe\",\r\n    department: \"IT\",\r\n    email: \"johnDoe@gmail.com\",\r\n  },\r\n  {\r\n    employeeId: \"2001\",\r\n    name: \"John Doe\",\r\n    department: \"IT\",\r\n    email: \"johnDoe@gmail.com\",\r\n  },\r\n  {\r\n    employeeId: \"2001\",\r\n    name: \"John Doe\",\r\n    department: \"IT\",\r\n    email: \"johnDoe@gmail.com\",\r\n  },\r\n  {\r\n    employeeId: \"2001\",\r\n    name: \"John Doe\",\r\n    department: \"IT\",\r\n    email: \"johnDoe@gmail.com\",\r\n  },\r\n]"],"names":[],"mappings":";;;;AAEO,MAAM,kBAAsC;IACjD;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;IACA;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;IACA;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;IACA;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;IACA;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;IACA;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;IACA;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;IACA;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;IACA;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;IACA;QACE,aAAa;QACb,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,aAAa;IACf;CACD;AAGM,MAAM,eAAe;IAC1B;QACE,YAAY;QACZ,MAAM;QACN,YAAY;QACZ,OAAO;IACT;IACA;QACE,YAAY;QACZ,MAAM;QACN,YAAY;QACZ,OAAO;IACT;IACA;QACE,YAAY;QACZ,MAAM;QACN,YAAY;QACZ,OAAO;IACT;IACA;QACE,YAAY;QACZ,MAAM;QACN,YAAY;QACZ,OAAO;IACT;IACA;QACE,YAAY;QACZ,MAAM;QACN,YAAY;QACZ,OAAO;IACT;IACA;QACE,YAAY;QACZ,MAAM;QACN,YAAY;QACZ,OAAO;IACT;IACA;QACE,YAAY;QACZ,MAAM;QACN,YAAY;QACZ,OAAO;IACT;IACA;QACE,YAAY;QACZ,MAAM;QACN,YAAY;QACZ,OAAO;IACT;CACD"}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/app/emergencies/page.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Breadcrumb from \"@/components/molecule/Breadcrumb\";\r\nimport { EmergenciesProps } from \"@/types\";\r\nimport { DataTable } from \"@/components/organism/EmergencyTable\";\r\nimport { columns } from \"@/components/organism/EmergencyCulomns\";\r\nimport { emergenciesList } from \"@/data\";\r\n\r\nasync function getData(): Promise<EmergenciesProps[]> {\r\n  return emergenciesList;\r\n}\r\n\r\nconst Emerciencies = async () => {\r\n  const data = await getData();\r\n\r\n  return (\r\n    <div className=\"p-4 bg-black/5 min-h-screen\">\r\n      <Breadcrumb />\r\n      <div className=\"h-[1px] w-full bg-gray-200\"></div>\r\n      <main className=\"container mx-auto py-4\">\r\n        <DataTable columns={columns} data={data} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Emerciencies;\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;;;;;;AAEA,eAAe;IACb,OAAO,6GAAA,CAAA,kBAAe;AACxB;AAEA,MAAM,eAAe;IACnB,MAAM,OAAO,MAAM;IAEnB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,qIAAA,CAAA,UAAU;;;;;0BACX,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,yIAAA,CAAA,YAAS;oBAAC,SAAS,2IAAA,CAAA,UAAO;oBAAE,MAAM;;;;;;;;;;;;;;;;;AAI3C;uCAEe"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}