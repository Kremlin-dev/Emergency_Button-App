{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/molecule/Breadcrumb.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\n\r\nfunction Breadcrumb() {\r\n  const pathname = usePathname();\r\n  const pathSegments = pathname.split(\"/\").filter(Boolean);\r\n\r\n  const breadcrumbs = pathSegments.map((segment, index) => {\r\n    const href = \"/\" + pathSegments.slice(0, index + 1).join(\"/\");\r\n    const label = segment.charAt(0).toUpperCase() + segment.slice(1);\r\n    return { href, label };\r\n  });\r\n\r\n  return (\r\n    <nav aria-label=\"Breadcrumb\" className=\"mb-4\">\r\n      <ol className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n        <li>\r\n          <Link href=\"/\" className=\"cursor-pointer hover:underline\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n        {breadcrumbs.map((crumb, index) => (\r\n          <React.Fragment key={crumb.href}>\r\n            <li>/</li>\r\n            <li>\r\n              {index === breadcrumbs.length - 1 ? (\r\n                <span className=\"font-medium text-gray-800\">\r\n                  {crumb.label}\r\n                </span>\r\n              ) : (\r\n                <Link href={crumb.href} className=\"cursor-pointer hover:underline\">\r\n                  {crumb.label}\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </React.Fragment>\r\n        ))}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,SAAS;IACP,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,eAAe,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC;IAEhD,MAAM,cAAc,aAAa,GAAG,CAAC,CAAC,SAAS;QAC7C,MAAM,OAAO,MAAM,aAAa,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC;QACzD,MAAM,QAAQ,QAAQ,MAAM,CAAC,GAAG,WAAW,KAAK,QAAQ,KAAK,CAAC;QAC9D,OAAO;YAAE;YAAM;QAAM;IACvB;IAEA,qBACE,8OAAC;QAAI,cAAW;QAAa,WAAU;kBACrC,cAAA,8OAAC;YAAG,WAAU;;8BACZ,8OAAC;8BACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;kCAAiC;;;;;;;;;;;gBAI3D,YAAY,GAAG,CAAC,CAAC,OAAO,sBACvB,8OAAC,qMAAA,CAAA,UAAK,CAAC,QAAQ;;0CACb,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;0CACE,UAAU,YAAY,MAAM,GAAG,kBAC9B,8OAAC;oCAAK,WAAU;8CACb,MAAM,KAAK;;;;;yDAGd,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAM,MAAM,IAAI;oCAAE,WAAU;8CAC/B,MAAM,KAAK;;;;;;;;;;;;uBATC,MAAM,IAAI;;;;;;;;;;;;;;;;AAkBzC;uCAEe"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\r\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,sMAAM,UAAU,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/organism/EmergencyTable.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  ColumnDef,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  useReactTable,\r\n  getPaginationRowModel,\r\n  getFilteredRowModel,\r\n  ColumnFiltersState,\r\n} from \"@tanstack/react-table\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Button } from \"../ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { IoTimeOutline } from \"react-icons/io5\";\r\n\r\ninterface DataTableProps<TData, TValue> {\r\n  columns: ColumnDef<TData, TValue>[];\r\n  data: TData[];\r\n}\r\n\r\nexport function DataTable<\r\n  TData extends { emergencyId: number; employeeId: string },\r\n  TValue\r\n>({ columns, data }: DataTableProps<TData, TValue>) {\r\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([]);\r\n  const [rowSelection, setRowSelection] = useState({});\r\n  const router = useRouter();\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    onColumnFiltersChange: setColumnFilters,\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    onRowSelectionChange: setRowSelection,\r\n    state: {\r\n      columnFilters,\r\n      rowSelection,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <main className=\"bg-white rounded-md p-2 w-full\">\r\n      <section className=\"flex items-center gap-4\">\r\n        <div className=\"flex items-center py-4\">\r\n          <Input\r\n            placeholder=\"Filter by employeeId...\"\r\n            value={\r\n              (table.getColumn(\"employeeId\")?.getFilterValue() as string) ?? \"\"\r\n            }\r\n            onChange={(event) =>\r\n              table.getColumn(\"employeeId\")?.setFilterValue(event.target.value)\r\n            }\r\n            className=\"max-w-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"bg-white p-2 shadow-md\">\r\n          <IoTimeOutline className=\"text-bold cursor-pointer\" />\r\n        </div>\r\n      </section>\r\n\r\n      <div className=\"rounded-md border cursor-pointer\">\r\n        <div className=\"overflow-x-auto\">\r\n          <Table>\r\n            <TableHeader className=\"bg-gray-200\">\r\n              {table.getHeaderGroups().map((headerGroup) => (\r\n                <TableRow key={headerGroup.id}>\r\n                  {headerGroup.headers.map((header) => (\r\n                    <TableHead key={header.id}>\r\n                      {header.isPlaceholder\r\n                        ? null\r\n                        : flexRender(\r\n                            header.column.columnDef.header,\r\n                            header.getContext()\r\n                          )}\r\n                    </TableHead>\r\n                  ))}\r\n                </TableRow>\r\n              ))}\r\n            </TableHeader>\r\n            <TableBody>\r\n              {table.getRowModel().rows?.length ? (\r\n                table.getRowModel().rows.map((row) => (\r\n                  <TableRow\r\n                    key={row.id}\r\n                    data-state={row.getIsSelected() && \"selected\"}\r\n                    className=\"hover:bg-gray-100 cursor-pointer\"\r\n                    onClick={() =>\r\n                      router.push(`/emergencies/${row.original.emergencyId}`)\r\n                    }\r\n                  >\r\n                    {row.getVisibleCells().map((cell) => (\r\n                      <TableCell key={cell.id}>\r\n                        {flexRender(\r\n                          cell.column.columnDef.cell,\r\n                          cell.getContext()\r\n                        )}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={columns.length}\r\n                    className=\"h-24 text-center\"\r\n                  >\r\n                    No results.\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n\r\n        <section className=\"flex items-center justify-between space-y-2 py-4 px-4\">\r\n          <div className=\"text-sm text-muted-foreground\">\r\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\r\n            {table.getFilteredRowModel().rows.length} row(s) selected.\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2 py-4\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => table.previousPage()}\r\n              disabled={!table.getCanPreviousPage()}\r\n            >\r\n              Previous\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => table.nextPage()}\r\n              disabled={!table.getCanNextPage()}\r\n            >\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 544, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\r\nimport { Check } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator\r\n      className={cn(\"flex items-center justify-center text-current\")}\r\n    >\r\n      <Check className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n))\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\nexport { Checkbox }\r\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,qKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["file://C%3A/github/Emergency_Button-App/client/components/organism/EmergencyCulomns.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ColumnDef } from \"@tanstack/react-table\";\r\nimport { EmergenciesProps } from \"@/types\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\n\r\nexport const columns: ColumnDef<EmergenciesProps>[] = [\r\n  {\r\n    id: \"select\",\r\n    header: ({ table }) => (\r\n      <Checkbox\r\n        checked={\r\n          table.getIsAllPageRowsSelected() ||\r\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\r\n        }\r\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\r\n        aria-label=\"Select all\"\r\n      />\r\n    ),\r\n    cell: ({ row }) => (\r\n      <Checkbox\r\n        checked={row.getIsSelected()}\r\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\r\n        aria-label=\"Select row\"\r\n      />\r\n    ),\r\n    enableSorting: false,\r\n    enableHiding: false,\r\n  },\r\n  {\r\n    accessorKey: \"emergencyId\",\r\n    header: \"Emergency ID\",\r\n  },\r\n  {\r\n    accessorKey: \"employeeId\",\r\n    header: \"Employee ID\",\r\n  },\r\n  {\r\n    accessorKey: \"category\",\r\n    header: \"Category\",\r\n  },\r\n  {\r\n    accessorKey: \"status\",\r\n    header: \"Status\",\r\n    cell: ({ getValue }) => {\r\n      const status = (getValue() as string) || \"\";\r\n      let bgColor = \"\";\r\n      let textColor = \"\";\r\n\r\n      switch (status.toLowerCase()) {\r\n        case \"resolved\":\r\n          bgColor = \"bg-green-100\";\r\n          textColor = \"text-green-800\";\r\n          break;\r\n        case \"pending\":\r\n          bgColor = \"bg-red-100\";\r\n          textColor = \"text-red-800\";\r\n          break;\r\n        case \"ongoing\":\r\n          bgColor = \"bg-yellow-100\";\r\n          textColor = \"text-yellow-800\";\r\n          break;\r\n        default:\r\n          bgColor = \"bg-gray-100\";\r\n          textColor = \"text-gray-800\";\r\n      }\r\n\r\n      return (\r\n        <div className={`px-2 inline-flex text-xs leading-5 items-center gap-1 font-semibold rounded-sm py-1 ${bgColor} ${textColor}`}>\r\n          <GoDotFill className={`${textColor}`} />\r\n          <p>{status}</p>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"dateCreated\",\r\n    header: \"Date Created\",\r\n  },\r\n];\r\n"],"names":[],"mappings":";;;;AAIA;AACA;AALA;;;;AAOO,MAAM,UAAyC;IACpD;QACE,IAAI;QACJ,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,6HAAA,CAAA,WAAQ;gBACP,SACE,MAAM,wBAAwB,MAC7B,MAAM,yBAAyB,MAAM;gBAExC,iBAAiB,CAAC,QAAU,MAAM,yBAAyB,CAAC,CAAC,CAAC;gBAC9D,cAAW;;;;;;QAGf,MAAM,CAAC,EAAE,GAAG,EAAE,iBACZ,8OAAC,6HAAA,CAAA,WAAQ;gBACP,SAAS,IAAI,aAAa;gBAC1B,iBAAiB,CAAC,QAAU,IAAI,cAAc,CAAC,CAAC,CAAC;gBACjD,cAAW;;;;;;QAGf,eAAe;QACf,cAAc;IAChB;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;QACR,MAAM,CAAC,EAAE,QAAQ,EAAE;YACjB,MAAM,SAAS,AAAC,cAAyB;YACzC,IAAI,UAAU;YACd,IAAI,YAAY;YAEhB,OAAQ,OAAO,WAAW;gBACxB,KAAK;oBACH,UAAU;oBACV,YAAY;oBACZ;gBACF,KAAK;oBACH,UAAU;oBACV,YAAY;oBACZ;gBACF,KAAK;oBACH,UAAU;oBACV,YAAY;oBACZ;gBACF;oBACE,UAAU;oBACV,YAAY;YAChB;YAEA,qBACE,8OAAC;gBAAI,WAAW,CAAC,oFAAoF,EAAE,QAAQ,CAAC,EAAE,WAAW;;kCAC3H,8OAAC,8IAAA,CAAA,YAAS;wBAAC,WAAW,GAAG,WAAW;;;;;;kCACpC,8OAAC;kCAAG;;;;;;;;;;;;QAGV;IACF;IACA;QACE,aAAa;QACb,QAAQ;IACV;CACD"}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}